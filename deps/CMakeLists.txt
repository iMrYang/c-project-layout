include(ExternalProject)

# default search policy
if (NOT DEFINED CMAKE_FIND_ROOT_PATH_MODE_PROGRAM)
  set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
endif()
if (NOT DEFINED CMAKE_FIND_ROOT_PATH_MODE_LIBRARY)
  set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
endif()
if (NOT DEFINED CMAKE_FIND_ROOT_PATH_MODE_INCLUDE)
  set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
endif()
if (NOT DEFINED CMAKE_FIND_ROOT_PATH_MODE_PACKAGE)
  set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
endif()

# if depends libraries need cache, install to this path
set(CPROJECT_DEPS_INSTALL_PREFIX  ${CMAKE_CURRENT_LIST_DIR}/${CMAKE_SYSTEM_NAME}/${CMAKE_SYSTEM_PROCESSOR}/${CPROJECT_RUNTIME}${CMAKE_BUILD_TYPE})
set(CMAKE_PREFIX_PATH             ${CPROJECT_DEPS_INSTALL_PREFIX} ${CMAKE_PREFIX_PATH})
set(CMAKE_FIND_ROOT_PATH          ${CPROJECT_DEPS_INSTALL_PREFIX} ${CMAKE_FIND_ROOT_PATH})

# set include directory
set(CPROJECT_DEPS_INCLUDE_DIRS ${CPROJECT_DEPS_INCLUDE_DIRS} ${CPROJECT_DEPS_INSTALL_PREFIX}/include)
# set link directory
link_directories(${CPROJECT_DEPS_INSTALL_PREFIX}/lib ${CPROJECT_DEPS_INSTALL_PREFIX}/lib64)

# fPIC
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

